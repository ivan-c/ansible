---
- name: Download PXE images
  get_url:
    url: "{{ debian_mirror }}/debian/dists/stretch/main/installer-amd64/current/images/netboot/debian-installer/amd64/{{ item }}"
    dest: "{{ vm_image_dir }}/{{ inventory_hostname }}/{{ item }}"
  with_items:
    - initrd.gz
    - linux

- name: Extract initial ramdisk
  command: gunzip --keep initrd.gz
  args:
    chdir: "{{ vm_image_dir }}/{{ inventory_hostname }}/"
    creates: "{{ vm_image_dir }}/{{ inventory_hostname }}/initrd"

- name: Create a folder for preseed files
  file:
    path: "{{ vm_image_dir }}/{{ inventory_hostname }}/preseed"
    state: directory

- name: Download authorized keys
  get_url:
    url: "https://github.com/ivan-c.keys"
    dest: "{{ vm_image_dir }}/{{ inventory_hostname }}/preseed/authorized_keys"
  register: keys_file_result

- name: Copy preseed file
  template:
    src: preseed.cfg.j2
    dest: "{{ vm_image_dir }}/{{ inventory_hostname }}/preseed/preseed.cfg"
  register: preseed_file_result

- name: Check if preseed initramfs exists
  stat: path="{{ vm_image_dir }}/{{ inventory_hostname }}/initrd.preseed"
  register: preseed_initramfs

- name: Install cpio
  delegate_to: "{{ vm_host }}"
  apt:
    name: cpio
    state: present

- name: Append preseed file to initial ramdisk
  shell: "cp initrd initrd.preseed && find preseed/ | cpio --create --format newc --append --file initrd.preseed"
  args:
    chdir: "{{ vm_image_dir }}/{{ inventory_hostname }}/"
  when: not preseed_initramfs.stat.exists or preseed_file_result.changed or keys_file_result.changed

- name: Boot the VM using the PXE images
  virt_boot:
    guest: "{{ inventory_hostname }}"
    kernel: "{{ vm_image_dir }}/{{ inventory_hostname }}/linux"
    initrd: "{{ vm_image_dir }}/{{ inventory_hostname }}/initrd.preseed"
    cmdline: "console=ttyS0,115200n8 auto=true hostname={{ inventory_hostname }} domain={{ vm_domain }} preseed/file=/preseed/preseed.cfg"
